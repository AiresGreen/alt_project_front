

describe('CV Construct Page', () => {
    beforeEach(() => {
        cy.visit('/cv-construct');
    });

    it('S√©lectionne un avatar via les boutons emoji', () => {
        // On suppose que chaque bouton avatar poss√®de data-cy="avatar-button" et un attribut data-avatar
        cy.get('[data-cy=avatar-button][data-avatar="üßë‚Äçüíª"]').click();
        // V√©rifie que le bouton s√©lectionn√© a une classe active (ex: .active)
        cy.get('[data-cy=avatar-button].active')
            .should('have.attr', 'data-avatar', 'üßë‚Äçüíª');
    });

    it('T√©l√©charge une photo et affiche l‚Äôaper√ßu', () => {
        // N√©cessite le plugin cypress-file-upload et un fichier fixture (ex: "example.png" dans cypress/fixtures)
        const fileName = 'example.png';
        cy.fixture(fileName, 'base64').then(fileContent => {
            cy.get('[data-cy=file-input]').attachFile({
                fileContent,
                fileName,
                mimeType: 'image/png',
                encoding: 'base64'
            });
        });
        // V√©rifie que l‚Äôaper√ßu de l‚Äôavatar est visible
        cy.get('[data-cy=avatar-preview]').should('be.visible');
    });

    it('Supprime l‚Äôavatar lorsque le bouton "Supprimer" est cliqu√©', () => {
        // D'abord, on simule la s√©lection d'un avatar
        cy.get('[data-cy=avatar-button][data-avatar="üßë‚Äçüíª"]').click();
        // Puis on clique sur le bouton de suppression, identifi√© par data-cy="delete-avatar"
        cy.get('[data-cy=delete-avatar]').click();
        // V√©rifie que l‚Äôaper√ßu n‚Äôest plus pr√©sent
        cy.get('[data-cy=avatar-preview]').should('not.exist');
    });

    it('Permet de s√©lectionner le pr√©nom et le nom dans les dropdowns', () => {
        // S√©lection du pr√©nom
        cy.get('[data-cy=firstname-select]').click();
        cy.get('[data-cy=firstname-option][data-value="Jean"]').click();
        cy.get('[data-cy=firstname-select]').should('contain.text', 'Jean');

        // S√©lection du nom
        cy.get('[data-cy=lastname-select]').click();
        cy.get('[data-cy=lastname-option][data-value="Dupont"]').click();
        cy.get('[data-cy=lastname-select]').should('contain.text', 'Dupont');
    });

    it('Permet de cocher des options dans les listes (ex. exp√©rience, comp√©tences)', () => {
        // Pour l'exp√©rience, on coche "Miaou"
        cy.get('[data-cy=checkbox-experience][data-value="Miaou"]')
            .check({ force: true });
        // V√©rifie que "Miaou" apparait dans la liste des exp√©riences
        cy.get('[data-cy=experience-list]').should('contain.text', 'Miaou');

        // Pour les comp√©tences, on coche "Communication"
        cy.get('[data-cy=checkbox-skills][data-value="Communication"]')
            .check({ force: true });
        cy.get('[data-cy=skills-list]').should('contain.text', 'Communication');
    });

    it('Affiche les boutons "T√©l√©charger en PDF" et le bouton de retour', () => {
        // V√©rifie la pr√©sence du bouton pour t√©l√©charger le PDF, identifi√© par data-cy="download-pdf"
        cy.get('[data-cy=download-pdf]').should('be.visible');
        // V√©rifie la pr√©sence du bouton de retour
        cy.get('[data-cy=back-button]').should('exist');
    });

    it('Soumet le formulaire et affiche le toast de confirmation', () => {
        // On simule la soumission du formulaire via le bouton identifi√© par data-cy="submit-cv"
        cy.get('[data-cy=submit-cv]').click();
        // V√©rifie l'apparition du toast de confirmation (par exemple, avec data-cy="toast")
        cy.get('[data-cy=toast]')
            .should('contain.text', 'CV sauvegard√© avec succ√®s !');
    });
});
